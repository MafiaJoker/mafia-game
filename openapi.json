{
  "info": {
    "title": "Litestar API",
    "version": "1.0.0"
  },
  "openapi": "3.1.0",
  "servers": [
    {
      "url": "/"
    }
  ],
  "paths": {
    "/healthz": {
      "get": {
        "summary": "Healthz",
        "operationId": "HealthzHealthz",
        "responses": {
          "200": {
            "description": "Request fulfilled, document follows",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/readyz": {
      "get": {
        "summary": "Readyz",
        "operationId": "ReadyzReadyz",
        "responses": {
          "200": {
            "description": "Request fulfilled, document follows",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/event-types": {
      "get": {
        "summary": "GetEventTypeList",
        "operationId": "ApiV1EventTypesGetEventTypeList",
        "parameters": [
          {
            "name": "searchString",
            "in": "query",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Field to search"
            },
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          },
          {
            "name": "searchIgnoreCase",
            "in": "query",
            "schema": {
              "oneOf": [
                {
                  "type": "boolean",
                  "default": false
                },
                {
                  "type": "null"
                }
              ],
              "title": "Search should be case sensitive",
              "default": false
            },
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          },
          {
            "name": "currentPage",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            },
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 20
            },
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          }
        ],
        "responses": {
          "200": {
            "description": "Request fulfilled, document follows",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "items": {
                      "items": {
                        "$ref": "#/components/schemas/EventTypeListSerializer"
                      },
                      "type": "array"
                    },
                    "limit": {
                      "type": "integer",
                      "description": "Maximal number of items to send."
                    },
                    "offset": {
                      "type": "integer",
                      "description": "Offset from the beginning of the query."
                    },
                    "total": {
                      "type": "integer",
                      "description": "Total number of items."
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request syntax or unsupported method",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status_code": {
                      "type": "integer"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "extra": {
                      "additionalProperties": {},
                      "type": [
                        "null",
                        "object",
                        "array"
                      ]
                    }
                  },
                  "type": "object",
                  "required": [
                    "detail",
                    "status_code"
                  ],
                  "description": "Validation Exception",
                  "examples": [
                    {
                      "status_code": 400,
                      "detail": "Bad Request",
                      "extra": {}
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "summary": "CreateEventType",
        "operationId": "ApiV1EventTypesCreateEventType",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventTypeCreateUpdateSerializer"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Document created, URL follows",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponseSchema"
                }
              }
            }
          },
          "400": {
            "description": "Bad request syntax or unsupported method",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status_code": {
                      "type": "integer"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "extra": {
                      "additionalProperties": {},
                      "type": [
                        "null",
                        "object",
                        "array"
                      ]
                    }
                  },
                  "type": "object",
                  "required": [
                    "detail",
                    "status_code"
                  ],
                  "description": "Validation Exception",
                  "examples": [
                    {
                      "status_code": 400,
                      "detail": "Bad Request",
                      "extra": {}
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/event-types/{event_type_id}": {
      "delete": {
        "summary": "DeleteEventType",
        "operationId": "ApiV1EventTypesEventTypeIdDeleteEventType",
        "parameters": [
          {
            "name": "event_type_id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "deprecated": false
          }
        ],
        "responses": {
          "204": {
            "description": "Request fulfilled, nothing follows",
            "headers": {}
          },
          "400": {
            "description": "Bad request syntax or unsupported method",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status_code": {
                      "type": "integer"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "extra": {
                      "additionalProperties": {},
                      "type": [
                        "null",
                        "object",
                        "array"
                      ]
                    }
                  },
                  "type": "object",
                  "required": [
                    "detail",
                    "status_code"
                  ],
                  "description": "Validation Exception",
                  "examples": [
                    {
                      "status_code": 400,
                      "detail": "Bad Request",
                      "extra": {}
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "summary": "UpdateEventType",
        "operationId": "ApiV1EventTypesEventTypeIdUpdateEventType",
        "parameters": [
          {
            "name": "event_type_id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "deprecated": false
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventTypeCreateUpdateSerializer"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Request fulfilled, document follows",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request syntax or unsupported method",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status_code": {
                      "type": "integer"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "extra": {
                      "additionalProperties": {},
                      "type": [
                        "null",
                        "object",
                        "array"
                      ]
                    }
                  },
                  "type": "object",
                  "required": [
                    "detail",
                    "status_code"
                  ],
                  "description": "Validation Exception",
                  "examples": [
                    {
                      "status_code": 400,
                      "detail": "Bad Request",
                      "extra": {}
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/events": {
      "get": {
        "summary": "GetEventsList",
        "operationId": "ApiV1EventsGetEventsList",
        "parameters": [
          {
            "name": "searchString",
            "in": "query",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Field to search"
            },
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          },
          {
            "name": "searchIgnoreCase",
            "in": "query",
            "schema": {
              "oneOf": [
                {
                  "type": "boolean",
                  "default": false
                },
                {
                  "type": "null"
                }
              ],
              "title": "Search should be case sensitive",
              "default": false
            },
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          },
          {
            "name": "currentPage",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            },
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 20
            },
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          },
          {
            "name": "orderBy",
            "in": "query",
            "schema": {
              "oneOf": [
                {
                  "type": "string",
                  "default": "start_date"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Order by field",
              "default": "start_date"
            },
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          },
          {
            "name": "sortOrder",
            "in": "query",
            "schema": {
              "type": [
                "string",
                "null"
              ],
              "enum": [
                "asc",
                "desc",
                null
              ],
              "title": "Field to search",
              "default": "desc"
            },
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          }
        ],
        "responses": {
          "200": {
            "description": "Request fulfilled, document follows",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "items": {
                      "items": {
                        "$ref": "#/components/schemas/EventListSerializer"
                      },
                      "type": "array"
                    },
                    "limit": {
                      "type": "integer",
                      "description": "Maximal number of items to send."
                    },
                    "offset": {
                      "type": "integer",
                      "description": "Offset from the beginning of the query."
                    },
                    "total": {
                      "type": "integer",
                      "description": "Total number of items."
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request syntax or unsupported method",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status_code": {
                      "type": "integer"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "extra": {
                      "additionalProperties": {},
                      "type": [
                        "null",
                        "object",
                        "array"
                      ]
                    }
                  },
                  "type": "object",
                  "required": [
                    "detail",
                    "status_code"
                  ],
                  "description": "Validation Exception",
                  "examples": [
                    {
                      "status_code": 400,
                      "detail": "Bad Request",
                      "extra": {}
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "summary": "CreateEvent",
        "operationId": "ApiV1EventsCreateEvent",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventCreateSerializer"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Document created, URL follows",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponseSchema"
                }
              }
            }
          },
          "400": {
            "description": "Bad request syntax or unsupported method",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status_code": {
                      "type": "integer"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "extra": {
                      "additionalProperties": {},
                      "type": [
                        "null",
                        "object",
                        "array"
                      ]
                    }
                  },
                  "type": "object",
                  "required": [
                    "detail",
                    "status_code"
                  ],
                  "description": "Validation Exception",
                  "examples": [
                    {
                      "status_code": 400,
                      "detail": "Bad Request",
                      "extra": {}
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/events/{event_id}": {
      "delete": {
        "summary": "DeleteEvent",
        "operationId": "ApiV1EventsEventIdDeleteEvent",
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "deprecated": false
          }
        ],
        "responses": {
          "204": {
            "description": "Request fulfilled, nothing follows",
            "headers": {}
          },
          "400": {
            "description": "Bad request syntax or unsupported method",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status_code": {
                      "type": "integer"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "extra": {
                      "additionalProperties": {},
                      "type": [
                        "null",
                        "object",
                        "array"
                      ]
                    }
                  },
                  "type": "object",
                  "required": [
                    "detail",
                    "status_code"
                  ],
                  "description": "Validation Exception",
                  "examples": [
                    {
                      "status_code": 400,
                      "detail": "Bad Request",
                      "extra": {}
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "summary": "UpdateEvent",
        "operationId": "ApiV1EventsEventIdUpdateEvent",
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "deprecated": false
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventUpdateSerializer"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Request fulfilled, document follows",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request syntax or unsupported method",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status_code": {
                      "type": "integer"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "extra": {
                      "additionalProperties": {},
                      "type": [
                        "null",
                        "object",
                        "array"
                      ]
                    }
                  },
                  "type": "object",
                  "required": [
                    "detail",
                    "status_code"
                  ],
                  "description": "Validation Exception",
                  "examples": [
                    {
                      "status_code": 400,
                      "detail": "Bad Request",
                      "extra": {}
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/games/{game_id}/players": {
      "put": {
        "summary": "SetPlayersPoints",
        "operationId": "ApiV1GamesGameIdPlayersSetPlayersPoints",
        "parameters": [
          {
            "name": "game_id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "deprecated": false
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/GamePlayerPointsSerializer"
                },
                "type": "array"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Request fulfilled, document follows",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request syntax or unsupported method",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status_code": {
                      "type": "integer"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "extra": {
                      "additionalProperties": {},
                      "type": [
                        "null",
                        "object",
                        "array"
                      ]
                    }
                  },
                  "type": "object",
                  "required": [
                    "detail",
                    "status_code"
                  ],
                  "description": "Validation Exception",
                  "examples": [
                    {
                      "status_code": 400,
                      "detail": "Bad Request",
                      "extra": {}
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "summary": "AddPlayersToGame",
        "operationId": "ApiV1GamesGameIdPlayersAddPlayersToGame",
        "parameters": [
          {
            "name": "game_id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "deprecated": false
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/GamePlayerAddSerializer"
                },
                "type": "array"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Document created, URL follows",
            "headers": {}
          },
          "400": {
            "description": "Bad request syntax or unsupported method",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status_code": {
                      "type": "integer"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "extra": {
                      "additionalProperties": {},
                      "type": [
                        "null",
                        "object",
                        "array"
                      ]
                    }
                  },
                  "type": "object",
                  "required": [
                    "detail",
                    "status_code"
                  ],
                  "description": "Validation Exception",
                  "examples": [
                    {
                      "status_code": 400,
                      "detail": "Bad Request",
                      "extra": {}
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/games": {
      "get": {
        "summary": "GetGamesList",
        "operationId": "ApiV1GamesGetGamesList",
        "parameters": [
          {
            "name": "currentPage",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            },
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 20
            },
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          },
          {
            "name": "orderBy",
            "in": "query",
            "schema": {
              "oneOf": [
                {
                  "type": "string",
                  "default": "created_at"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Order by field",
              "default": "created_at"
            },
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          },
          {
            "name": "sortOrder",
            "in": "query",
            "schema": {
              "type": [
                "string",
                "null"
              ],
              "enum": [
                "asc",
                "desc",
                null
              ],
              "title": "Field to search",
              "default": "desc"
            },
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          },
          {
            "name": "game_label",
            "in": "query",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Game label search"
            },
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          },
          {
            "name": "event_label",
            "in": "query",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Search by event"
            },
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          }
        ],
        "responses": {
          "200": {
            "description": "Request fulfilled, document follows",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "items": {
                      "items": {
                        "$ref": "#/components/schemas/GameListSerializer"
                      },
                      "type": "array"
                    },
                    "limit": {
                      "type": "integer",
                      "description": "Maximal number of items to send."
                    },
                    "offset": {
                      "type": "integer",
                      "description": "Offset from the beginning of the query."
                    },
                    "total": {
                      "type": "integer",
                      "description": "Total number of items."
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request syntax or unsupported method",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status_code": {
                      "type": "integer"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "extra": {
                      "additionalProperties": {},
                      "type": [
                        "null",
                        "object",
                        "array"
                      ]
                    }
                  },
                  "type": "object",
                  "required": [
                    "detail",
                    "status_code"
                  ],
                  "description": "Validation Exception",
                  "examples": [
                    {
                      "status_code": 400,
                      "detail": "Bad Request",
                      "extra": {}
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "summary": "CreateGame",
        "operationId": "ApiV1GamesCreateGame",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GameCreateSerializer"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Document created, URL follows",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponseSchema"
                }
              }
            }
          },
          "400": {
            "description": "Bad request syntax or unsupported method",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status_code": {
                      "type": "integer"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "extra": {
                      "additionalProperties": {},
                      "type": [
                        "null",
                        "object",
                        "array"
                      ]
                    }
                  },
                  "type": "object",
                  "required": [
                    "detail",
                    "status_code"
                  ],
                  "description": "Validation Exception",
                  "examples": [
                    {
                      "status_code": 400,
                      "detail": "Bad Request",
                      "extra": {}
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/games/{game_id}/phases": {
      "put": {
        "summary": "UpdateGamePhase",
        "operationId": "ApiV1GamesGameIdPhasesUpdateGamePhase",
        "parameters": [
          {
            "name": "game_id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "deprecated": false
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GamePhaseSerializer"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Request fulfilled, document follows",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request syntax or unsupported method",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status_code": {
                      "type": "integer"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "extra": {
                      "additionalProperties": {},
                      "type": [
                        "null",
                        "object",
                        "array"
                      ]
                    }
                  },
                  "type": "object",
                  "required": [
                    "detail",
                    "status_code"
                  ],
                  "description": "Validation Exception",
                  "examples": [
                    {
                      "status_code": 400,
                      "detail": "Bad Request",
                      "extra": {}
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "summary": "CreateGamePhase",
        "operationId": "ApiV1GamesGameIdPhasesCreateGamePhase",
        "parameters": [
          {
            "name": "game_id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "deprecated": false
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GamePhaseSerializer"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Document created, URL follows",
            "headers": {}
          },
          "400": {
            "description": "Bad request syntax or unsupported method",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status_code": {
                      "type": "integer"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "extra": {
                      "additionalProperties": {},
                      "type": [
                        "null",
                        "object",
                        "array"
                      ]
                    }
                  },
                  "type": "object",
                  "required": [
                    "detail",
                    "status_code"
                  ],
                  "description": "Validation Exception",
                  "examples": [
                    {
                      "status_code": 400,
                      "detail": "Bad Request",
                      "extra": {}
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/games/{game_id}": {
      "get": {
        "summary": "GetGameDetailed",
        "operationId": "ApiV1GamesGameIdGetGameDetailed",
        "parameters": [
          {
            "name": "game_id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "deprecated": false
          }
        ],
        "responses": {
          "200": {
            "description": "Request fulfilled, document follows",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameDetailedSerializer"
                }
              }
            }
          },
          "400": {
            "description": "Bad request syntax or unsupported method",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status_code": {
                      "type": "integer"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "extra": {
                      "additionalProperties": {},
                      "type": [
                        "null",
                        "object",
                        "array"
                      ]
                    }
                  },
                  "type": "object",
                  "required": [
                    "detail",
                    "status_code"
                  ],
                  "description": "Validation Exception",
                  "examples": [
                    {
                      "status_code": 400,
                      "detail": "Bad Request",
                      "extra": {}
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "summary": "UpdateGame",
        "operationId": "ApiV1GamesGameIdUpdateGame",
        "parameters": [
          {
            "name": "game_id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "deprecated": false
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GameUpdateSerializer"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Request fulfilled, document follows",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request syntax or unsupported method",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status_code": {
                      "type": "integer"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "extra": {
                      "additionalProperties": {},
                      "type": [
                        "null",
                        "object",
                        "array"
                      ]
                    }
                  },
                  "type": "object",
                  "required": [
                    "detail",
                    "status_code"
                  ],
                  "description": "Validation Exception",
                  "examples": [
                    {
                      "status_code": 400,
                      "detail": "Bad Request",
                      "extra": {}
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/games/{game_id}/state": {
      "get": {
        "summary": "GetGameState",
        "operationId": "ApiV1GamesGameIdStateGetGameState",
        "parameters": [
          {
            "name": "game_id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "deprecated": false
          }
        ],
        "responses": {
          "200": {
            "description": "Request fulfilled, document follows",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameStateSerializer"
                }
              }
            }
          },
          "400": {
            "description": "Bad request syntax or unsupported method",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status_code": {
                      "type": "integer"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "extra": {
                      "additionalProperties": {},
                      "type": [
                        "null",
                        "object",
                        "array"
                      ]
                    }
                  },
                  "type": "object",
                  "required": [
                    "detail",
                    "status_code"
                  ],
                  "description": "Validation Exception",
                  "examples": [
                    {
                      "status_code": 400,
                      "detail": "Bad Request",
                      "extra": {}
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/users/{user_id}/tariff": {
      "put": {
        "summary": "AddTariffEventTypeForUser",
        "operationId": "ApiV1UsersUserIdTariffAddTariffEventTypeForUser",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "deprecated": false
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserTariffEventTypeSerializer"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Request fulfilled, document follows",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request syntax or unsupported method",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status_code": {
                      "type": "integer"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "extra": {
                      "additionalProperties": {},
                      "type": [
                        "null",
                        "object",
                        "array"
                      ]
                    }
                  },
                  "type": "object",
                  "required": [
                    "detail",
                    "status_code"
                  ],
                  "description": "Validation Exception",
                  "examples": [
                    {
                      "status_code": 400,
                      "detail": "Bad Request",
                      "extra": {}
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/users": {
      "get": {
        "summary": "GetUsers",
        "operationId": "ApiV1UsersGetUsers",
        "parameters": [
          {
            "name": "currentPage",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            },
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 20
            },
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          },
          {
            "name": "orderBy",
            "in": "query",
            "schema": {
              "oneOf": [
                {
                  "type": "string",
                  "default": "created_at"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Order by field",
              "default": "created_at"
            },
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          },
          {
            "name": "sortOrder",
            "in": "query",
            "schema": {
              "type": [
                "string",
                "null"
              ],
              "enum": [
                "asc",
                "desc",
                null
              ],
              "title": "Field to search",
              "default": "desc"
            },
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          },
          {
            "name": "nickname",
            "in": "query",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User nickname trigram filter"
            },
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          }
        ],
        "responses": {
          "200": {
            "description": "Request fulfilled, document follows",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "items": {
                      "items": {
                        "$ref": "#/components/schemas/UserListSerializer"
                      },
                      "type": "array"
                    },
                    "limit": {
                      "type": "integer",
                      "description": "Maximal number of items to send."
                    },
                    "offset": {
                      "type": "integer",
                      "description": "Offset from the beginning of the query."
                    },
                    "total": {
                      "type": "integer",
                      "description": "Total number of items."
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request syntax or unsupported method",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status_code": {
                      "type": "integer"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "extra": {
                      "additionalProperties": {},
                      "type": [
                        "null",
                        "object",
                        "array"
                      ]
                    }
                  },
                  "type": "object",
                  "required": [
                    "detail",
                    "status_code"
                  ],
                  "description": "Validation Exception",
                  "examples": [
                    {
                      "status_code": 400,
                      "detail": "Bad Request",
                      "extra": {}
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "summary": "CreateUser",
        "operationId": "ApiV1UsersCreateUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LightCreateUpdateUserSerializer"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Document created, URL follows",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponseSchema"
                }
              }
            }
          },
          "400": {
            "description": "Bad request syntax or unsupported method",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status_code": {
                      "type": "integer"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "extra": {
                      "additionalProperties": {},
                      "type": [
                        "null",
                        "object",
                        "array"
                      ]
                    }
                  },
                  "type": "object",
                  "required": [
                    "detail",
                    "status_code"
                  ],
                  "description": "Validation Exception",
                  "examples": [
                    {
                      "status_code": 400,
                      "detail": "Bad Request",
                      "extra": {}
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/users/{user_id}": {
      "put": {
        "summary": "UpdateUser",
        "operationId": "ApiV1UsersUserIdUpdateUser",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "deprecated": false
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LightCreateUpdateUserSerializer"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Request fulfilled, document follows",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request syntax or unsupported method",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status_code": {
                      "type": "integer"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "extra": {
                      "additionalProperties": {},
                      "type": [
                        "null",
                        "object",
                        "array"
                      ]
                    }
                  },
                  "type": "object",
                  "required": [
                    "detail",
                    "status_code"
                  ],
                  "description": "Validation Exception",
                  "examples": [
                    {
                      "status_code": 400,
                      "detail": "Bad Request",
                      "extra": {}
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/auth/telegram": {
      "put": {
        "summary": "Login",
        "operationId": "ApiV1AuthTelegramLogin",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TelegramLoginSerializer"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Request fulfilled, document follows",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request syntax or unsupported method",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status_code": {
                      "type": "integer"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "extra": {
                      "additionalProperties": {},
                      "type": [
                        "null",
                        "object",
                        "array"
                      ]
                    }
                  },
                  "type": "object",
                  "required": [
                    "detail",
                    "status_code"
                  ],
                  "description": "Validation Exception",
                  "examples": [
                    {
                      "status_code": 400,
                      "detail": "Bad Request",
                      "extra": {}
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/tariffs": {
      "get": {
        "summary": "GetTariffs",
        "operationId": "ApiV1TariffsGetTariffs",
        "parameters": [
          {
            "name": "searchString",
            "in": "query",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Field to search"
            },
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          },
          {
            "name": "searchIgnoreCase",
            "in": "query",
            "schema": {
              "oneOf": [
                {
                  "type": "boolean",
                  "default": false
                },
                {
                  "type": "null"
                }
              ],
              "title": "Search should be case sensitive",
              "default": false
            },
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          },
          {
            "name": "currentPage",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            },
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 20
            },
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          },
          {
            "name": "orderBy",
            "in": "query",
            "schema": {
              "oneOf": [
                {
                  "type": "string",
                  "default": "price"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Order by field",
              "default": "price"
            },
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          },
          {
            "name": "sortOrder",
            "in": "query",
            "schema": {
              "type": [
                "string",
                "null"
              ],
              "enum": [
                "asc",
                "desc",
                null
              ],
              "title": "Field to search",
              "default": "desc"
            },
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          }
        ],
        "responses": {
          "200": {
            "description": "Request fulfilled, document follows",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "items": {
                      "items": {
                        "$ref": "#/components/schemas/TariffListSerializer"
                      },
                      "type": "array"
                    },
                    "limit": {
                      "type": "integer",
                      "description": "Maximal number of items to send."
                    },
                    "offset": {
                      "type": "integer",
                      "description": "Offset from the beginning of the query."
                    },
                    "total": {
                      "type": "integer",
                      "description": "Total number of items."
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request syntax or unsupported method",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status_code": {
                      "type": "integer"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "extra": {
                      "additionalProperties": {},
                      "type": [
                        "null",
                        "object",
                        "array"
                      ]
                    }
                  },
                  "type": "object",
                  "required": [
                    "detail",
                    "status_code"
                  ],
                  "description": "Validation Exception",
                  "examples": [
                    {
                      "status_code": 400,
                      "detail": "Bad Request",
                      "extra": {}
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "summary": "CreateTariff",
        "operationId": "ApiV1TariffsCreateTariff",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TariffCreateUpdateSerializer"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Document created, URL follows",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponseSchema"
                }
              }
            }
          },
          "400": {
            "description": "Bad request syntax or unsupported method",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status_code": {
                      "type": "integer"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "extra": {
                      "additionalProperties": {},
                      "type": [
                        "null",
                        "object",
                        "array"
                      ]
                    }
                  },
                  "type": "object",
                  "required": [
                    "detail",
                    "status_code"
                  ],
                  "description": "Validation Exception",
                  "examples": [
                    {
                      "status_code": 400,
                      "detail": "Bad Request",
                      "extra": {}
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/tariffs/{tariff_id}": {
      "put": {
        "summary": "UpdateTariff",
        "operationId": "ApiV1TariffsTariffIdUpdateTariff",
        "parameters": [
          {
            "name": "tariff_id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "deprecated": false
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TariffCreateUpdateSerializer"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Request fulfilled, document follows",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request syntax or unsupported method",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status_code": {
                      "type": "integer"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "extra": {
                      "additionalProperties": {},
                      "type": [
                        "null",
                        "object",
                        "array"
                      ]
                    }
                  },
                  "type": "object",
                  "required": [
                    "detail",
                    "status_code"
                  ],
                  "description": "Validation Exception",
                  "examples": [
                    {
                      "status_code": 400,
                      "detail": "Bad Request",
                      "extra": {}
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "summary": "DeleteTariff",
        "operationId": "ApiV1TariffsTariffIdDeleteTariff",
        "parameters": [
          {
            "name": "tariff_id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "deprecated": false
          }
        ],
        "responses": {
          "204": {
            "description": "Request fulfilled, nothing follows",
            "headers": {}
          },
          "400": {
            "description": "Bad request syntax or unsupported method",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status_code": {
                      "type": "integer"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "extra": {
                      "additionalProperties": {},
                      "type": [
                        "null",
                        "object",
                        "array"
                      ]
                    }
                  },
                  "type": "object",
                  "required": [
                    "detail",
                    "status_code"
                  ],
                  "description": "Validation Exception",
                  "examples": [
                    {
                      "status_code": 400,
                      "detail": "Bad Request",
                      "extra": {}
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/invoices/{invoice_id}": {
      "put": {
        "summary": "CloseInvoice",
        "operationId": "ApiV1InvoicesInvoiceIdCloseInvoice",
        "parameters": [
          {
            "name": "invoice_id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "deprecated": false
          }
        ],
        "responses": {
          "200": {
            "description": "Request fulfilled, document follows",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request syntax or unsupported method",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status_code": {
                      "type": "integer"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "extra": {
                      "additionalProperties": {},
                      "type": [
                        "null",
                        "object",
                        "array"
                      ]
                    }
                  },
                  "type": "object",
                  "required": [
                    "detail",
                    "status_code"
                  ],
                  "description": "Validation Exception",
                  "examples": [
                    {
                      "status_code": 400,
                      "detail": "Bad Request",
                      "extra": {}
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "summary": "DeleteInvoice",
        "operationId": "ApiV1InvoicesInvoiceIdDeleteInvoice",
        "parameters": [
          {
            "name": "invoice_id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "deprecated": false
          }
        ],
        "responses": {
          "204": {
            "description": "Request fulfilled, nothing follows",
            "headers": {}
          },
          "400": {
            "description": "Bad request syntax or unsupported method",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status_code": {
                      "type": "integer"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "extra": {
                      "additionalProperties": {},
                      "type": [
                        "null",
                        "object",
                        "array"
                      ]
                    }
                  },
                  "type": "object",
                  "required": [
                    "detail",
                    "status_code"
                  ],
                  "description": "Validation Exception",
                  "examples": [
                    {
                      "status_code": 400,
                      "detail": "Bad Request",
                      "extra": {}
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/invoices": {
      "get": {
        "summary": "GetListInvoices",
        "operationId": "ApiV1InvoicesGetListInvoices",
        "parameters": [
          {
            "name": "currentPage",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            },
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 20
            },
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          },
          {
            "name": "nickname",
            "in": "query",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User nickname trigram filter"
            },
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          },
          {
            "name": "event_label",
            "in": "query",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Search by event"
            },
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          },
          {
            "name": "is_open",
            "in": "query",
            "schema": {
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Search by opened invoices"
            },
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          },
          {
            "name": "orderBy",
            "in": "query",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Order by field"
            },
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          },
          {
            "name": "sortOrder",
            "in": "query",
            "schema": {
              "type": [
                "string",
                "null"
              ],
              "enum": [
                "asc",
                "desc",
                null
              ],
              "title": "Field to search",
              "default": "desc"
            },
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          }
        ],
        "responses": {
          "200": {
            "description": "Request fulfilled, document follows",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "items": {
                      "items": {
                        "$ref": "#/components/schemas/InvoiceListSerializer"
                      },
                      "type": "array"
                    },
                    "limit": {
                      "type": "integer",
                      "description": "Maximal number of items to send."
                    },
                    "offset": {
                      "type": "integer",
                      "description": "Offset from the beginning of the query."
                    },
                    "total": {
                      "type": "integer",
                      "description": "Total number of items."
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request syntax or unsupported method",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status_code": {
                      "type": "integer"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "extra": {
                      "additionalProperties": {},
                      "type": [
                        "null",
                        "object",
                        "array"
                      ]
                    }
                  },
                  "type": "object",
                  "required": [
                    "detail",
                    "status_code"
                  ],
                  "description": "Validation Exception",
                  "examples": [
                    {
                      "status_code": 400,
                      "detail": "Bad Request",
                      "extra": {}
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "summary": "CreateInvoice",
        "operationId": "ApiV1InvoicesCreateInvoice",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceCreateSerializer"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Document created, URL follows",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponseSchema"
                }
              }
            }
          },
          "400": {
            "description": "Bad request syntax or unsupported method",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status_code": {
                      "type": "integer"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "extra": {
                      "additionalProperties": {},
                      "type": [
                        "null",
                        "object",
                        "array"
                      ]
                    }
                  },
                  "type": "object",
                  "required": [
                    "detail",
                    "status_code"
                  ],
                  "description": "Validation Exception",
                  "examples": [
                    {
                      "status_code": 400,
                      "detail": "Bad Request",
                      "extra": {}
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/invoices/me": {
      "get": {
        "summary": "GetUserInvoicesList",
        "operationId": "ApiV1InvoicesMeGetUserInvoicesList",
        "parameters": [
          {
            "name": "currentPage",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            },
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 20
            },
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          },
          {
            "name": "nickname",
            "in": "query",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User nickname trigram filter"
            },
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          },
          {
            "name": "event_label",
            "in": "query",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Search by event"
            },
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          },
          {
            "name": "is_open",
            "in": "query",
            "schema": {
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Search by opened invoices"
            },
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          },
          {
            "name": "orderBy",
            "in": "query",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Order by field"
            },
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          },
          {
            "name": "sortOrder",
            "in": "query",
            "schema": {
              "type": [
                "string",
                "null"
              ],
              "enum": [
                "asc",
                "desc",
                null
              ],
              "title": "Field to search",
              "default": "desc"
            },
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "allowReserved": false
          }
        ],
        "responses": {
          "200": {
            "description": "Request fulfilled, document follows",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "items": {
                      "items": {
                        "$ref": "#/components/schemas/MyInvoiceListSerializer"
                      },
                      "type": "array"
                    },
                    "limit": {
                      "type": "integer",
                      "description": "Maximal number of items to send."
                    },
                    "offset": {
                      "type": "integer",
                      "description": "Offset from the beginning of the query."
                    },
                    "total": {
                      "type": "integer",
                      "description": "Total number of items."
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request syntax or unsupported method",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status_code": {
                      "type": "integer"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "extra": {
                      "additionalProperties": {},
                      "type": [
                        "null",
                        "object",
                        "array"
                      ]
                    }
                  },
                  "type": "object",
                  "required": [
                    "detail",
                    "status_code"
                  ],
                  "description": "Validation Exception",
                  "examples": [
                    {
                      "status_code": 400,
                      "detail": "Bad Request",
                      "extra": {}
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    }
  },
  "components": {
    "schemas": {
      "BaseResponseSchema": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "type": "object",
        "required": [
          "id"
        ],
        "title": "BaseResponseSchema"
      },
      "EventCreateSerializer": {
        "properties": {
          "label": {
            "type": "string"
          },
          "description": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "language": {
            "type": "string"
          },
          "start_date": {
            "type": "string",
            "format": "date"
          },
          "end_date": {
            "oneOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ]
          },
          "table_name_template": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "event_type_id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "type": "object",
        "required": [
          "event_type_id",
          "label",
          "language",
          "start_date"
        ],
        "title": "EventCreateSerializer"
      },
      "EventListSerializer": {
        "properties": {
          "label": {
            "type": "string"
          },
          "description": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "language": {
            "type": "string"
          },
          "start_date": {
            "type": "string",
            "format": "date"
          },
          "end_date": {
            "oneOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ]
          },
          "table_name_template": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "event_type": {
            "$ref": "#/components/schemas/EventTypeListSerializer"
          }
        },
        "type": "object",
        "required": [
          "event_type",
          "id",
          "label",
          "language",
          "start_date"
        ],
        "title": "EventListSerializer"
      },
      "EventTypeCreateUpdateSerializer": {
        "properties": {
          "label": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "label"
        ],
        "title": "EventTypeCreateUpdateSerializer"
      },
      "EventTypeListSerializer": {
        "properties": {
          "label": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "type": "object",
        "required": [
          "id",
          "label"
        ],
        "title": "EventTypeListSerializer"
      },
      "EventUpdateSerializer": {
        "properties": {
          "label": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "language": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "start_date": {
            "oneOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ]
          },
          "end_date": {
            "oneOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ]
          },
          "table_name_template": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "event_type_id": {
            "oneOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [],
        "title": "EventUpdateSerializer"
      },
      "FoulsSerializer": {
        "properties": {
          "box_id": {
            "type": "integer",
            "maximum": 10,
            "minimum": 1
          },
          "count_fouls": {
            "type": "integer"
          }
        },
        "type": "object",
        "required": [
          "box_id",
          "count_fouls"
        ],
        "title": "FoulsSerializer"
      },
      "GameCreateSerializer": {
        "properties": {
          "label": {
            "type": "string"
          },
          "table_id": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ]
          },
          "event_id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "type": "object",
        "required": [
          "event_id",
          "label"
        ],
        "title": "GameCreateSerializer"
      },
      "GameDetailedSerializer": {
        "properties": {
          "label": {
            "type": "string"
          },
          "event": {
            "$ref": "#/components/schemas/LightEventSerializer"
          },
          "started_at": {
            "type": "string",
            "format": "date-time"
          },
          "table_name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "result": {
            "$ref": "#/components/schemas/GameStatusesEnum"
          },
          "game_master": {
            "$ref": "#/components/schemas/LightUserSerializer"
          },
          "players": {
            "items": {
              "$ref": "#/components/schemas/PlayerGameDetailedSerializer"
            },
            "type": "array"
          }
        },
        "type": "object",
        "required": [
          "event",
          "game_master",
          "label",
          "players",
          "result",
          "started_at"
        ],
        "title": "GameDetailedSerializer"
      },
      "GameListSerializer": {
        "properties": {
          "label": {
            "type": "string"
          },
          "table_id": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ]
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "event": {
            "$ref": "#/components/schemas/LightEventSerializer"
          },
          "started_at": {
            "type": "string",
            "format": "date-time"
          },
          "result": {
            "$ref": "#/components/schemas/GameStatusesEnum"
          }
        },
        "type": "object",
        "required": [
          "event",
          "id",
          "label",
          "result",
          "started_at"
        ],
        "title": "GameListSerializer"
      },
      "GamePhaseSerializer": {
        "properties": {
          "don_checked_box_id": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "maximum": 10,
            "minimum": 1
          },
          "sheriff_checked_box_id": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "maximum": 10,
            "minimum": 1
          },
          "killed_box_id": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "maximum": 10,
            "minimum": 1
          },
          "removed_box_ids": {
            "oneOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ]
          },
          "ppk_box_id": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "maximum": 10,
            "minimum": 1
          },
          "fouls_summary": {
            "oneOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/FoulsSerializer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ]
          },
          "voting_summary": {
            "oneOf": [
              {
                "items": {
                  "oneOf": [
                    {
                      "items": {
                        "$ref": "#/components/schemas/VotingSummarySerializer"
                      },
                      "type": "array"
                    },
                    {
                      "$ref": "#/components/schemas/VotingSummerForAllSerializer"
                    }
                  ]
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ]
          },
          "best_move": {
            "oneOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [],
        "title": "GamePhaseSerializer"
      },
      "GamePlayerAddSerializer": {
        "properties": {
          "user_id": {
            "type": "string",
            "format": "uuid"
          },
          "role": {
            "$ref": "#/components/schemas/GameRolesEnum"
          },
          "box_id": {
            "type": "integer"
          }
        },
        "type": "object",
        "required": [
          "box_id",
          "role",
          "user_id"
        ],
        "title": "GamePlayerAddSerializer"
      },
      "GamePlayerPointsSerializer": {
        "properties": {
          "box_id": {
            "type": "integer"
          },
          "extra_points": {
            "oneOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ]
          },
          "penalty_points": {
            "oneOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ]
          },
          "comment": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "box_id"
        ],
        "title": "GamePlayerPointsSerializer"
      },
      "GameRolesEnum": {
        "type": "string",
        "enum": [
          "mafia",
          "don",
          "sheriff",
          "civilian"
        ],
        "title": "GameRolesEnum"
      },
      "GameStateSerializer": {
        "properties": {
          "phase_id": {
            "type": "integer"
          },
          "is_critical_phase": {
            "type": "boolean"
          },
          "players": {
            "items": {
              "$ref": "#/components/schemas/PlayerInGameSerializer"
            },
            "type": "array"
          },
          "voting_summary": {
            "items": {
              "items": {
                "$ref": "#/components/schemas/VotingSummarySerializer"
              },
              "type": "array"
            },
            "type": "array"
          }
        },
        "type": "object",
        "required": [
          "is_critical_phase",
          "phase_id",
          "players",
          "voting_summary"
        ],
        "title": "GameStateSerializer"
      },
      "GameStatusesEnum": {
        "type": "string",
        "enum": [
          "mafia_win",
          "civilians_win",
          "draw",
          "in_progress",
          "created",
          "seating_ready"
        ],
        "title": "GameStatusesEnum"
      },
      "GameUpdateSerializer": {
        "properties": {
          "label": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "table_id": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ]
          },
          "event_id": {
            "oneOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ]
          },
          "is_hidden": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [],
        "title": "GameUpdateSerializer"
      },
      "InvoiceCreateSerializer": {
        "properties": {
          "event_id": {
            "type": "string",
            "format": "uuid"
          },
          "user_id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "type": "object",
        "required": [
          "event_id",
          "user_id"
        ],
        "title": "InvoiceCreateSerializer"
      },
      "InvoiceListSerializer": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "event": {
            "$ref": "#/components/schemas/LightEventSerializer"
          },
          "opened_at": {
            "type": "string",
            "format": "date-time"
          },
          "closed_at": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ]
          },
          "sum": {
            "$ref": "#/components/schemas/TariffLightSerializer"
          },
          "user": {
            "$ref": "#/components/schemas/LightUserSerializer"
          }
        },
        "type": "object",
        "required": [
          "event",
          "id",
          "opened_at",
          "sum",
          "user"
        ],
        "title": "InvoiceListSerializer"
      },
      "LightCreateUpdateUserSerializer": {
        "properties": {
          "nickname": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "nickname"
        ],
        "title": "LightCreateUpdateUserSerializer"
      },
      "LightEventSerializer": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "label": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "id",
          "label"
        ],
        "title": "LightEventSerializer"
      },
      "LightUserSerializer": {
        "properties": {
          "nickname": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "type": "object",
        "required": [
          "id",
          "nickname"
        ],
        "title": "LightUserSerializer"
      },
      "MyInvoiceListSerializer": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "event": {
            "$ref": "#/components/schemas/LightEventSerializer"
          },
          "opened_at": {
            "type": "string",
            "format": "date-time"
          },
          "closed_at": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ]
          },
          "sum": {
            "$ref": "#/components/schemas/TariffLightSerializer"
          }
        },
        "type": "object",
        "required": [
          "event",
          "id",
          "opened_at",
          "sum"
        ],
        "title": "MyInvoiceListSerializer"
      },
      "PlayerGameDetailedSerializer": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "nickname": {
            "type": "string"
          },
          "box_id": {
            "type": "integer"
          },
          "role": {
            "$ref": "#/components/schemas/GameRolesEnum"
          },
          "auto_points": {
            "oneOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ]
          },
          "extra_points": {
            "oneOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ]
          },
          "penalty_points": {
            "oneOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ]
          },
          "best_move_points": {
            "oneOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ]
          },
          "comment": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "box_id",
          "id",
          "nickname",
          "role"
        ],
        "title": "PlayerGameDetailedSerializer"
      },
      "PlayerInGameSerializer": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "nickname": {
            "type": "string"
          },
          "box_id": {
            "type": "integer"
          },
          "role": {
            "$ref": "#/components/schemas/GameRolesEnum"
          },
          "fouls": {
            "type": "integer"
          },
          "is_in_game": {
            "type": "boolean"
          }
        },
        "type": "object",
        "required": [
          "box_id",
          "fouls",
          "id",
          "is_in_game",
          "nickname",
          "role"
        ],
        "title": "PlayerInGameSerializer"
      },
      "TariffCreateUpdateSerializer": {
        "properties": {
          "label": {
            "type": "string"
          },
          "price": {
            "type": "number"
          },
          "iso_4217_code": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "iso_4217_code",
          "label",
          "price"
        ],
        "title": "TariffCreateUpdateSerializer"
      },
      "TariffLightSerializer": {
        "properties": {
          "price": {
            "type": "string"
          },
          "iso_4217_code": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "iso_4217_code",
          "price"
        ],
        "title": "TariffLightSerializer"
      },
      "TariffListSerializer": {
        "properties": {
          "price": {
            "type": "string"
          },
          "iso_4217_code": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "label": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "id",
          "iso_4217_code",
          "label",
          "price"
        ],
        "title": "TariffListSerializer"
      },
      "TelegramLoginSerializer": {
        "properties": {
          "telegram_id": {
            "type": "integer"
          },
          "first_name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "last_name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "photo_url": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "auth_date": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ]
          },
          "nickname": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "hash": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "hash",
          "telegram_id"
        ],
        "title": "TelegramLoginSerializer"
      },
      "UserListSerializer": {
        "properties": {
          "nickname": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "is_unregistered": {
            "type": "boolean"
          }
        },
        "type": "object",
        "required": [
          "id",
          "is_unregistered",
          "nickname"
        ],
        "title": "UserListSerializer"
      },
      "UserTariffEventTypeSerializer": {
        "properties": {
          "tariff_id": {
            "type": "string",
            "format": "uuid"
          },
          "event_type_id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "type": "object",
        "required": [
          "event_type_id",
          "tariff_id"
        ],
        "title": "UserTariffEventTypeSerializer"
      },
      "VotingSummarySerializer": {
        "properties": {
          "voted_box_id": {
            "type": "integer"
          },
          "voter_box_ids": {
            "items": {
              "type": "integer"
            },
            "type": "array"
          }
        },
        "type": "object",
        "required": [
          "voted_box_id",
          "voter_box_ids"
        ],
        "title": "VotingSummarySerializer"
      },
      "VotingSummerForAllSerializer": {
        "properties": {
          "vote_for_all": {
            "items": {
              "type": "integer"
            },
            "type": "array"
          }
        },
        "type": "object",
        "required": [
          "vote_for_all"
        ],
        "title": "VotingSummerForAllSerializer"
      }
    },
    "securitySchemes": {
      "sessionCookie": {
        "type": "apiKey",
        "description": "Session cookie authentication.",
        "name": "session",
        "in": "cookie"
      }
    }
  },
  "security": [
    {
      "sessionCookie": []
    }
  ]
}